#!/bin/bash

set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/plugin.bash
. "$DIR/../lib/plugin.bash"

WEBHOOK_URL=$(plugin_read_config WEBHOOK_URL "")

MESSAGE=$(plugin_read_config MESSAGE "")

DRY_RUN=$(plugin_read_config DRY_RUN "false")

if [ -z "${WEBHOOK_URL}" ]; then
  echo 'Missing webhook_url property in the plugin definition'
  exit 1
fi

if [ -z "${MESSAGE}" ]; then
  echo 'Missing message property in the plugin definition'
  exit 1
fi

STATUS="Passed"
if [ "0" != "${BUILDKITE_COMMAND_EXIT_STATUS}" ]; then
  STATUS="Failed"
fi

PAYLOAD="$(cat <<EOF
{
        "type": "message",
        "attachments": [
            {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "contentUrl": null,
                "content": {
                    "\$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                    "type": "AdaptiveCard",
                    "version": "1.2",
                    "body": [
                        {
                            "type": "TextBlock",
                            "text": "${MESSAGE}"
                        },
                        {
                            "type": "TextBlock",
                            "text": "${STATUS} ${BUILDKITE_PIPELINE_SLUG} (${BUILDKITE_BRANCH}) #${BUILDKITE_BUILD_NUMBER}"
                        }
                    ],
                    "actions": [
                        {
                            "title": "View Build",
                            "type": "Action.OpenUrl",
                            "url": "${BUILDKITE_BUILD_URL}"
                        }
                    ]
                }
            }
        ]
    }
EOF
)"

if [ "$DRY_RUN" = "true" ]; then
  echo "Dry run mode, validating payload without sending."
  echo "Payload:"
  echo "${PAYLOAD}"

  echo "Validating adaptive card..."

  if [[ ! "${PAYLOAD}" == *'"type": "AdaptiveCard"'* ]]; then
    echo "Missing AdaptiveCard type"
    exit 1
  fi

  if [[ ! "${PAYLOAD}" == *'"type": "message"'* ]]; then
    echo "Missing message type"
    exit 1
  fi

  if [[ ! "${PAYLOAD}" == *'"contentType": "application/vnd.microsoft.card.adaptive"'* ]]; then
    echo "Missing adaptive card content type"
    exit 1
  fi

  echo "Validation passed"
else
  echo "Sending notification to MS Teams channel..."

  echo "${PAYLOAD}" | curl --silent -X POST "${WEBHOOK_URL}" \
      -H "Content-Type: application/json" \
      -d @-
fi
